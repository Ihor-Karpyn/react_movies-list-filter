{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/Search/Search.jsx","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","debounce","fs","ms","timer","args","clearTimeout","setTimeout","Search","state","search","filterWithDebounce","props","filter","handlerChange","event","target","name","value","setState","toLowerCase","includes","this","htmlFor","type","id","placeholder","onChange","React","Component","App","moviesFromServer","moviesForShow","updateSearchingMovies","ReactDOM","render","document","getElementById"],"mappings":"+vEAIaA,G,kBAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAaC,EAAvB,EAAuBA,OAAQC,EAA/B,EAA+BA,QAA/B,OACvB,yBAAKC,UAAU,QACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,iBAChB,yBACEC,IAAKH,EACLI,IAAI,gBAIV,yBAAKF,UAAU,gBACb,yBAAKA,UAAU,SACb,yBAAKA,UAAU,cACb,4BAAQA,UAAU,kBAChB,yBACEC,IAAI,wBACJC,IAAI,WAIV,yBAAKF,UAAU,iBACb,uBAAGA,UAAU,cAAcJ,KAI/B,yBAAKI,UAAU,WACZH,EACD,6BACA,uBAAGM,KAAMJ,GAAT,aAaRJ,EAAUS,aAAe,CACvBP,YAAa,ICxCR,IAAMQ,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,yBAAKN,UAAU,UACZM,EAAOC,KAAI,SAAAC,GAAK,OACf,kBAAC,EAAD,eAAWC,IAAKD,EAAME,QAAYF,SAgBxCH,EAAWD,aAAe,CACxBE,OAAQ,I,kBC2BV,SAASK,EAASC,EAAIC,GACpB,IAAIC,EAEJ,OAAO,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAClBC,aAAaF,GAEbA,EAAQG,YAAW,kBAAML,EAAE,WAAF,EAAMG,KAAOF,IAI3BK,M,4MA3DbC,MAAQ,CACNC,OAAQ,GACRC,mBAAoBV,EAAS,EAAKW,MAAMC,OAAQ,M,EAGlDC,cAAgB,SAACC,GACf,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACNP,EAAuB,EAAKF,MAA5BE,mBAER,EAAKQ,SAAL,eAAiBF,EAAOC,IAMxBP,GALiB,SAAC,GAAD,IAAGzB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,YAAV,OACfD,EAAMkC,cAAcC,SAASH,EAAME,gBAChCjC,EAAYiC,cAAcC,SAASH,EAAME,mB,4CAMhD,WACE,IAAQV,EAAWY,KAAKb,MAAhBC,OAER,OACE,yBAAKpB,UAAU,OACb,yBAAKA,UAAU,SACb,2BAAOiC,QAAQ,eAAejC,UAAU,SAAxC,gBAIA,yBAAKA,UAAU,WACb,2BACEkC,KAAK,OACLC,GAAG,eACHR,KAAK,SACL3B,UAAU,QACVoC,YAAY,mBACZR,MAAOR,EACPiB,SAAUL,KAAKR,uB,GArCRc,IAAMC,WCGdC,EAAb,4MACErB,MAAQ,CACNb,OAAQmC,EACRC,cAAeD,GAHnB,EAMEE,sBAAwB,SAACpB,GACvB,EAAKM,UAAS,kBAAiB,CAC7Ba,cADY,EAAGpC,OACOiB,OAAOA,QARnC,4CAYE,WACE,IAAQmB,EAAkBV,KAAKb,MAAvBuB,cAER,OACE,yBAAK1C,UAAU,QACb,yBAAKA,UAAU,gBACb,kBAAC,EAAD,CAAQuB,OAAQS,KAAKW,wBAErB,kBAAC,EAAD,CAAYrC,OAAQoC,KAEtB,yBAAK1C,UAAU,WAAf,0BAtBR,GAAyBuC,aCDzBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.14305afa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Search extends React.Component {\n  state = {\n    search: '',\n    filterWithDebounce: debounce(this.props.filter, 500),\n  };\n\n  handlerChange = (event) => {\n    const { name, value } = event.target;\n    const { filterWithDebounce } = this.state;\n\n    this.setState({ [name]: value });\n    const callback = ({ title, description }) => (\n      title.toLowerCase().includes(value.toLowerCase())\n      || description.toLowerCase().includes(value.toLowerCase())\n    );\n\n    filterWithDebounce(callback);\n  };\n\n  render() {\n    const { search } = this.state;\n\n    return (\n      <div className=\"box\">\n        <div className=\"field\">\n          <label htmlFor=\"search-query\" className=\"label\">\n            Search movie\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"search-query\"\n              name=\"search\"\n              className=\"input\"\n              placeholder=\"Type search word\"\n              value={search}\n              onChange={this.handlerChange}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  filter: PropTypes.func.isRequired,\n};\n\nfunction debounce(fs, ms) {\n  let timer;\n\n  return (...args) => {\n    clearTimeout(timer);\n\n    timer = setTimeout(() => fs(...args), ms);\n  };\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport moviesFromServer from './api/movies.json';\nimport Search from './components/Search/Search';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n    moviesForShow: moviesFromServer,\n  };\n\n  updateSearchingMovies = (filter) => {\n    this.setState(({ movies }) => ({\n      moviesForShow: movies.filter(filter),\n    }));\n  };\n\n  render() {\n    const { moviesForShow } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <Search filter={this.updateSearchingMovies} />\n\n          <MoviesList movies={moviesForShow} />\n        </div>\n        <div className=\"sidebar\">\n          Sidebar goes here\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}